const path = require("path");
const fs = require("fs");

const paths = {
    server: path.join(__dirname, ".."),
    config: path.join(__dirname, "..", "conf"),
    lib: path.join(__dirname, "..", "libs"),
}

require("module").TYPE = {
    configuration : Symbol("configuration"),
    controller : Symbol("controller"),
    custom : Symbol("custom"),
    library : Symbol("library"),
    middleware : Symbol("middleware"),
    service : Symbol("service"),
    model : Symbol("model"),
}

const internalConfigs = {}

fs.readdirSync(
        paths.config,
        { withFileTypes:true }
    )
    .filter(dirent => !dirent.isDirectory())
    .filter(dirent => dirent.name.includes(".config.js"))
    .map(dirent => dirent.name)
    .map(filename => {
        const id = path.basename(filename, path.extname(filename));
        return {
            id: path.basename(id, path.extname(id)),
            content: require(`${paths.config}/${id}`),
        }
    })
    .forEach(config=>{
        internalConfigs[config.id] = config.content;
    })

console.log(internalConfigs.rootPath);

const ModuleScanner = require(`${paths.lib}/utils/module-scanner`)
const scanned = ModuleScanner.scan({
        from: internalConfigs.rootPath,
        extenstion: ".js"
    })
console.log(JSON.stringify(scanned, null, 4))